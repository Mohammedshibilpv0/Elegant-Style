<%-include("../partials/user/header.ejs")%>
<%-include('../partials/user/navbar.ejs')%>
<%-include('../partials/user/mobilenav.ejs')%>
<style>
	#successMessage {
		color: green;
	}

	#errorMessage {
		color: red;
	}

	


#progressbar-1 {
color: #455A64;
}

#progressbar-1 li {
list-style-type: none;
font-size: 13px;
width: 33.33%;
float: left;
position: relative;
}

#progressbar-1 #step1:before {
content: "1";
color: #fff;
width: 29px;
margin-left: 22px;
padding-left: 11px;
}

#progressbar-1 #step2:before {
content: "2";
color: #fff;
width: 29px;
}

#progressbar-1 #step3:before {
content: "3";
color: #fff;
width: 29px;
margin-right: 22px;
text-align: center;
}

#progressbar-1 li:before {
line-height: 29px;
display: block;
font-size: 12px;
background: #455A64;
border-radius: 50%;
margin: auto;
}

#progressbar-1 li:after {
content: '';
width: 121%;
height: 2px;
background: #455A64;
position: absolute;
left: 0%;
right: 0%;
top: 15px;
z-index: -1;
}

#progressbar-1 li:nth-child(2):after {
left: 50%
}

#progressbar-1 li:nth-child(1):after {
left: 25%;
width: 121%
}

#progressbar-1 li:nth-child(3):after {
left: 25%;
width: 50%;
}

#progressbar-1 li.active:before,
#progressbar-1 li.active:after {
background: #1266f1;
}

.card-stepper {
z-index: 0
}
	
</style>
    <div class="page-wrapper">
       

        <main class="main">
        	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">My Account<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->
            <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
                <div class="container">
                    
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="page-content">
            	<div class="dashboard">
	                <div class="container">
	                	<div class="row">
	                		<aside class="col-md-4 col-lg-3">
	                			<ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
								    <li class="nav-item">
								        <a class="nav-link active" id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard" role="tab" aria-controls="tab-dashboard" aria-selected="true">Dashboard</a>
								    </li>

								    <li class="nav-item">
								        <a class="nav-link" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="false">Orders</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" id="tab-downloads-link" data-toggle="tab" href="#tab-downloads" role="tab" aria-controls="tab-downloads" aria-selected="false" >Coupons</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false"> Change Password?</a>
								    </li>
								    <li class="nav-item">
								        <a class="nav-link" href="/logout">Log Out</a>
								    </li>
								</ul>
	                		</aside><!-- End .col-lg-3 -->

	                		<div class="col-md-8 col-lg-9">
	                			<div class="tab-content">
								    <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
                                        <div class="row d-flex align-items-center justify-content-center">
								    		<div class="col-lg-6">
								    			<div class="card card-dashboard">
								    				<div class="card-body">
								    					<h3 class="card-title">Dashboard </h3><!-- End .card-title -->

														<p>Name:   <%=userdetails.Name%><br>
                                                           Email:  <%=userdetails.Email%><br>
														<br>
														Status:  <%=userdetails.Status%><br>
														<a href="#" data-toggle="modal" data-target="#editModal">Edit <i class="icon-edit"></i></a>

														<h6>Referal Link</h6>
														<input type="text" class="form-control"
														value="https://elegantstyle.cloud/signup?referralCode=<%= userdetails.Referid%>" id="referralLink"
														readonly />
												 <div class="input-group-append">
													 <button class="btn btn-primary " style="height: 40px;" onclick="copyReferralLink()">Copy</button>
												 </div>
												 
												 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- Include SweetAlert script -->
												 
												 <script>
													 function copyReferralLink() {
														 var referralLink = document.getElementById("referralLink");
														 referralLink.select();
														 document.execCommand("copy");
														 
														 // Display SweetAlert instead of standard alert
														 Swal.fire({
															 icon: 'success',
															 title: 'Referral link copied!',
															 text: 'The referral link has been copied to the clipboard.'
														 });
													 }
												 </script>
												 
		  
								    				</div><!-- End .card-body -->
								    			</div><!-- End .card-dashboard -->
								    		</div><!-- End .col-lg-6 -->


								    	</div><!-- End .row -->
										<div class="row d-flex align-items-center justify-content-center">
											<div class="col-lg-6">
												<div class="card card-dashboard">
													<div class="card-body">
														<h3 class="card-title text-center">wallet </h3><!-- End .card-title -->
														<br>
														<h5>Total Balance: &nbsp; â‚¹ &nbsp; <%=userdetails.wallet%>  </h5><br>

														
														<button type="button" class="btn btn-primary btn-block btn-lg" data-toggle="modal" data-target="#myModal">
															View Transactions
														  </button>
													</div><!-- End .card-body -->
												</div><!-- End .card-dashboard -->
											</div><!-- End .col-lg-6 -->
										</div><!-- End .row -->
										<div class="modal" id="myModal">

											<div class="modal-dialog">
											  <div class="modal-content">

												<!-- Modal Header -->
												<div class="modal-header">
												  <h4 class="modal-title">Wallet Transactions</h4>
												  <button type="button" class="close" data-dismiss="modal">&times;</button>
												</div>

												<!-- Modal body -->

												<div class="modal-body p-3">

													<table class="table table-striped ">
														<div class="container ">
														  <thead>
															<tr>
															  <th>Date</th>
															  <th>Amount</th>
															  <th>Description</th>
															  <th>Status</th>
															</tr>
														  </thead>
														  <tbody>
															<%
															  // Sort the wallet history by date in descending order (latest transactions first)
															  userdetails.walletHistory.sort((a, b) => new Date(b.date) - new Date(a.date)).forEach(wallet => {
															%>
															<tr>
															  <td><%= wallet.date.toLocaleDateString() %></td>
															  <td><%= wallet.amount %></td>
															  <td><%= wallet.description %></td>
															  <td>
																<% if (wallet.status === "in") { %>
																  <i class="fa-solid fa-arrow-left" style="color: #087f06;"></i>
																<% } else if (wallet.status === "out") { %>
																  <i class="fa-solid fa-arrow-left fa-rotate-180" style="color: #a21606;"></i>
																<% } %>
															  </td>
															</tr>
															<% }) %>
														  </tbody>
														</div>
													  </table>
											</div>
										  
												<!-- Modal footer -->
												<div class="modal-footer">
												  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
												</div>
										  
											  </div>
											</div>
										  </div>

								    </div><!-- .End .tab-pane -->
									 <!-- Edit Modal -->
								<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
					        	<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="editModalLabel">Edit User Details</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close">
											<span aria-hidden="true">&times;</span>
										</button>
									</div>
								<div class="modal-body">
									<!-- Input fields for editing user details -->
									<form id="editForm">
										<div class="form-group">
											<label for="editName">Name:</label>
											<input type="text" class="form-control" id="editName" value="<%= userdetails.Name %>" name="name" required>
										</div>
										<!-- Add more input fields as needed -->
										<button type="button" class="btn btn-primary" onclick="submitForm()">Save Changes</button>
									</form>
								</div>
							</div>
						</div>
					</div>

					

					<div class="tab-pane fade mb-5 "  id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
						<section class="vh-100 gradient-custom-2 mt-5" >
							<div class="container py-5 mt-5">
							  <% orders.forEach(order=> { %>
								<div class="row align-items-center h-100  mb-5">
								  <div class="col-md-10 col-lg-8 col-xl-6">
									<div class="card card-stepper " style="border-radius: 16px;">
									  <div class="card-header p-4">
										<div class="d-flex justify-content-between align-items-center">
										  <div>
											<p class="text-muted mb-2"> Order ID <span class="fw-bold text-body"><%= order._id %></span></p>
											<p class="text-muted mb-0"> Place On <span class="fw-bold text-body"> <%= order.date.toLocaleDateString('en-US',
												{
												year:'numeric',
												month: 'short'
												,
												day: '2-digit'
												}).replace(/\//g, '-'
												)
												%></span> </p>
												<% order.Products.forEach((product,index ) => { %>
													<div class="d-flex flex-row mb-4 pb-2 mt-4 ">
													  <div class="flex-fill">
														<h5 class="bold"> <a href="/singleproduct/<%=product._id%>"><%=index+1%>. &nbsp; <%= product.name %></a></h5>
														<p class="text-muted"> Qt: <%= product.quantity %> item</p>
														<h4 class="mb-3">  â‚¹ <%= product.total %> <span class="small text-muted"> </span></h4>
													  </div>
													  <div>
														<img class="align-self-center img-fluid" src="/uploads/<%=product.image%>" width="50">
													  </div>
													</div>


												  <% }); %>
												  <br> via (<%=order.paymentMode%>)
												  <% if(order.orderStatus=="placed"){%>
													<p class="text-primary"><%=order.orderStatus%></p>
											  <div class="card-footer p-4">
												<div class="d-flex justify-content-between">
												  <h5 class="fw-normal mb-0">
													<a href="#" class="mb-4" onclick="removefromorder('<%=order._id%>' )">Cancel</a>
												  </h5>
												  <div class="border-start h-100"></div>
												</div>
											  </div>
											  <%}%>
											
										  </div>
										</div>
									  </div>
									  <div class="card-body p-4 ">
										<a href="/vieworder/<%=order._id%>" class="btn btn-primary">View More</a>
									  </div>
									</div>
								  </div>
								</div>
							  <% }) %>
							</div>
							
						  </section>

					  </div>

					  <div class="tab-pane fade" id="tab-downloads" role="tabpanel" aria-labelledby="tab-downloads-link">
						<h4 class="text-center">Coupons</h4>

						<%if(coupon){%>
							<%coupon.forEach(coupon=>{%>

						<div class="card mt-5 mx-3" style="width: 87%;">
							<div class="card-body">
							  <span class="card-title mt-1">CouponName: &nbsp; <%=coupon.couponName%></span>
							  <p class="card-text">couponCode: &nbsp; <%=coupon.couponCode%></p>
							  <p class="card-text">discountamount:  &nbsp; <%=coupon.discountamount%></p>
							  <p class="card-text">minAmount: &nbsp;<%=coupon.minAmount%></p>
							  <p class="card-text">couponDescription: &nbsp; <%=coupon.couponDescription%></p>
							  <p class="card-text">expiryDate: &nbsp; <%=coupon.expiryDate.toLocaleDateString('en-US',
								{
								year:'numeric',
								month: 'short'
								,
								day: '2-digit'
								}).replace(/\//g, '-'
								)
								%></p>
								
							</div>
						  </div>

						  <%})%>
						  <%}else{%>
							<h3>NO Coupons</h3>
							<%}%>

				</div>

					  <a hidden href="/" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>


								    <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">

										<% userdetails.Addresses.forEach(user => { %>
											<div class="row">
												<div class="col-lg-6">
													<div class="card card-dashboard">
														<div class="card-body">
															<h3 class="card-title">Billing Address</h3>
															<!-- End .card-title -->
															<p> Location : <%=user.location%><br>
																Address <%=user.address%><br>
																city : <%=user.city%><br>
																Zip : <%=user.zip%><br>
																Phone : <%=user.phone%><br>
																Email : <%=user.email%><br>
																State : <%=user.state%> <br>
															</p>
														</div>
														<!-- End .card-body -->
														<div class="container justify-content-between">
															<!-- Edit button with data-toggle attribute to open the modal -->
															<a href="#" data-toggle="modal" data-target="#editModal<%=user._id%>">Edit <i class="icon-edit"></i></a>
										
															<!-- Delete button -->
															<a href="#" style="margin-left: 255px;" onclick="removeAddress('<%=user._id%>')">Delete <i class="fa-solid fa-trash"></i></a>
														</div>
													</div>
													<!-- End .card-dashboard -->
												</div>
												<!-- End .col-lg-6 -->
										
												<!-- Edit Modal -->
												<div class="modal fade" id="editModal<%=user._id%>" tabindex="-1" role="dialog" aria-labelledby="editModalLabel<%=user._id%>" aria-hidden="true">
													<div class="modal-dialog" role="document">
														<div class="modal-content">
															<!-- Add your modal content here -->
															<div class="modal-header">
																<h5 class="modal-title" id="editModalLabel<%=user._id%>">Edit Address</h5>
																<button type="button" class="close" data-dismiss="modal" aria-label="Close">
																	<span aria-hidden="true">&times;</span>
																</button>
															</div>

															<div class="modal-body">
																<!-- Add your form fields with predefined values here -->
																<form id="editForm<%=user._id%>">
																	<!-- Example input field (replace with your actual form fields) -->
																	<div class="modal-body mx-3">
																	<div class="form-group">
																		<label for="editLocation<%=user._id%>">Location</label>
																		<input type="text" class="form-control" id="editLocation<%=user._id%>" value="<%=user.location%>" required>
																	</div>
																	<div class="md-form mb-5">

																		<input type="text" id="editaddress<%=user._id%>" class="form-control validate" name="Address" value="<%=user.address%>">
																		<label data-error="wrong" data-success="right" for="form29">Address</label>
																	  </div>

																	  <div class="md-form mb-5">
																		<i class="fas fa-tag prefix grey-text"></i>
																		<input type="text" id="editcity<%=user._id%>" class="form-control validate" name="city" value="<%=user.city%>">
																		<label data-error="wrong" data-success="right" for="form32">City</label>
																	  </div>

																	  <div class="md-form mb-5">
																		<i class="fas fa-tag prefix grey-text"></i>
																		<input type="text" id="editzip<%=user._id%>" class="form-control validate" name="zip" value="<%=user.zip%>">
																		<label data-error="wrong" data-success="right" for="form32">Zip</label>
																	  </div>
																	  <div class="md-form mb-5">
																		<i class="fas fa-tag prefix grey-text"></i>
																		<input type="text" id="editphone<%=user._id%>" class="form-control validate" name="phone" value="<%=user.phone%>">
																		<label data-error="wrong" data-success="right" for="form32">Phone</label>
																	  </div>
							
																	  <div class="md-form mb-5">
																		<i class="fas fa-tag prefix grey-text"></i>
																		<input type="email"id="editemail<%=user._id%>" class="form-control validate" name="email" value="<%=user.email%>">
																		<label data-error="wrong" data-success="right" for="form32">Email</label>
																	  </div>
							
																	  <div class="md-form mb-5">
																		<i class="fas fa-tag prefix grey-text"></i>
																		<input type="text" id="editstate<%=user._id%>" class="form-control validate" name="state" value="<%=user.state%>">
																		<label data-error="wrong" data-success="right" for="form32">State</label>
																	  </div>
							
																	<!-- Add more fields as needed -->
									
																	<!-- Example Save button -->
																	<button type="button" class="btn btn-primary" onclick="saveEdit('<%=user._id%>')">Save Changes</button>
																</div>
																</form>
															</div>
														</div>
													</div>
												</div>
												<!-- End Edit Modal -->
										
											</div>
											<!-- End .row -->
										<% }) %>
										

										<div>
											<a href="" class="btn btn-primary btn-rounded mb-4 mt-3" data-toggle="modal" data-target="#modalContactForm">Add Address
										</a>
										  </div>
								  <form action="/profileAddress" method="POST" onsubmit="return validateForm()">
									<div class="modal fade" id="modalContactForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
									aria-hidden="true">
									<div class="modal-dialog" role="document">
									  <div class="modal-content">
										<div class="modal-header text-center">
										  <h4 class="modal-title w-100 font-weight-bold">Enter the details</h4>
										  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
											<span aria-hidden="true">&times;</span>
										  </button>
										</div>
										<div class="modal-body mx-3">
										  <div class="md-form mb-5">
											<i class="fas fa-user prefix grey-text"></i>
											<input type="text" id="form28" class="form-control validate" name="location">
											<label data-error="wrong" data-success="right" for="form34">Location</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-envelope prefix grey-text"></i>
											<input type="text" id="form29" class="form-control validate" name="Address">
											<label data-error="wrong" data-success="right" for="form29">Address</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form30" class="form-control validate" name="city">
											<label data-error="wrong" data-success="right" for="form32">City</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form31" class="form-control validate" name="zip">
											<label data-error="wrong" data-success="right" for="form32">Zip</label>
										  </div>
										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form32" class="form-control validate" name="phone">
											<label data-error="wrong" data-success="right" for="form32">Phone</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="email" id="form33" class="form-control validate" name="email">
											<label data-error="wrong" data-success="right" for="form32">Email</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form34" class="form-control validate" name="state">
											<label data-error="wrong" data-success="right" for="form32">State</label>
										  </div>

										</div>
										<div class="modal-footer d-flex justify-content-center">
											<button type="submit" class="btn btn-primary">Send <i class="fas fa-paper-plane-o ml-1"></i></button>
										</div>
									  </div>
									</div>
								  </div>
								</form>

								    </div>

								    <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
										<form id="changePasswordForm">

											<label>Current password (leave blank to leave unchanged)</label>
											<input type="password" class="form-control" name="password">
										
											<label>New password (leave blank to leave unchanged)</label>
											<input type="password" class="form-control" name="newpassword">
										
											<label>Confirm new password</label>
											<input type="password" class="form-control mb-2" name="confirmpassword">
										
											<div id="passwordValidationMessage" style="color: red;"></div> <!-- This div will display password validation messages -->
											<div id="successMessage" style="color: green;"></div> <!-- This div will display success messages -->
											<div id="errorMessage" style="color: red;"></div> <!-- This div will display error messages -->
										
											<button type="button" class="btn btn-outline-primary-2" onclick="changePassword()">
												<span>SAVE CHANGES</span>
												<i class="icon-long-arrow-right"></i>
											</button>
										
										</form>
										
										<script>
										function isPasswordStrong(password) {
											// Regular expression for strong password: at least 8 characters, at least one uppercase letter, one lowercase letter, one number, and one special character
											var strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
											return strongPasswordRegex.test(password);
										}
										
										function changePassword() {
    var newPassword = document.getElementsByName("newpassword")[0].value;
    var confirmPassword = document.getElementsByName("confirmpassword")[0].value;
    var passwordValidationMessage = document.getElementById("passwordValidationMessage");

    if (!isPasswordStrong(newPassword)) {
        passwordValidationMessage.textContent = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.";
        return false;
    } else {
        passwordValidationMessage.textContent = ""; // Clear the error message if the password is strong
    }

    if (newPassword !== confirmPassword) {
        passwordValidationMessage.textContent = "Passwords do not match.";
        return false;
    }

    const formData = new FormData(document.getElementById('changePasswordForm'));

    const formObject = {};
    formData.forEach((value, key) => {
        formObject[key] = value;
    });

    fetch('/changepassword/', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formObject),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        const successMessageDiv = document.getElementById('successMessage');
        const errorMessageDiv = document.getElementById('errorMessage');

        if (data.success) {
            successMessageDiv.textContent = data.message;
            errorMessageDiv.textContent = ''; // Clear any previous error messages
            document.getElementById('changePasswordForm').reset();
        } else {
            errorMessageDiv.textContent = data.message;
            successMessageDiv.textContent = ''; // Clear any previous success messages
        }
    })
    .catch(error => {
        console.error('There was a problem changing the password:', error.message);
    });
}

										</script>
										
										<div id="successMessage"></div>
										<div id="errorMessage"></div>
								    </div><!-- .End .tab-pane -->
								</div>
	                		</div><!-- End .col-lg-9 -->
	                	</div><!-- End .row -->
	                </div><!-- End .container -->
                </div><!-- End .dashboard -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->

    <button id="scroll-top" title="Back to Top"><i class="icon-arrow-up"></i></button>

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 
<script>
    function submitForm() {
    // Get form values
  // Get form values
const name = document.getElementById('editName').value;

// Send a fetch request to the backend
fetch('/submitprofile', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded', // Set the Content-Type header
    },
    body: `name=${encodeURIComponent(name)}`, // Encode the form data
})
.then(response => {
    if (!response.ok) {
        throw new Error('Network response was not ok');
    }
    return response.json();
})
.then(data => {
    // Handle the response from the backend

    console.log('Response from the backend:', data);
	window.location.reload()
})
.catch(error => {
    // Handle errors
    console.error('There was a problem:', error.message);
});

}

</script>



<script>
    ///// deleting the order product
    function removefromorder(orderId) {
        // Show SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: 'You are about to cancel the order. This action cannot be undone!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, cancel it!',
        }).then((result) => {
            if (result.isConfirmed) {
                // If user clicks "Yes" on the confirmation dialog

                // Make a fetch request to your server to cancel the product from the order
                fetch(`/cancelOrder/${orderId}/`, {
                    method: 'POST',
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Handle the response from the server
                        console.log('Order cancelled successfully:', data);

                        // Show SweetAlert success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Order Cancelled!',
                            text: 'Your order has been cancelled successfully.',
                        }).then(() => {
                            // Reload the page
                            reloadOrderTab()
                        });
                    })
                    .catch(error => {
                        // Handle errors
                        console.error('There was a problem cancelling the order:', error.message);

                        // Show SweetAlert error message
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'There was a problem cancelling the order. Please try again.',
                        });
                    });
            }
        });
    }
</script>

<script>
    function removeAddress(userId) {
        // Show SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: 'You won\'t be able to revert this!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // User confirmed, proceed with the delete operation
                deleteAddress(userId);
            }
        });
    }

    function deleteAddress(userId) {
        fetch(`/removeaddress/${userId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
                // You may need to include additional headers such as authentication tokens
            },
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            // Handle success, e.g., update UI or reload page
            console.log('Address removed successfully');
            reloadAddressTab();
        })
        .catch(error => {
            // Handle errors, e.g., show an alert to the user
            console.error('Error removing address:', error);
        });
    }

    function reloadAddressTab() {
        // Use vanilla JavaScript to fetch the content and update the specific div
        fetch(window.location.href, { method: 'GET' })
            .then(response => response.text())
            .then(html => {
                // Extract the content of the 'tab-address' div from the fetched HTML
                const tabAddressContent = new DOMParser().parseFromString(html, 'text/html')
                    .getElementById('tab-address').innerHTML;

                // Update the content of the 'tab-address' div
                document.getElementById('tab-address').innerHTML = tabAddressContent;
            })
            .catch(error => {
                console.error('Error reloading address tab:', error);
            });
    }

	function reloadOrderTab() {
        // Use vanilla JavaScript to fetch the content and update the specific div
        fetch(window.location.href, { method: 'GET' })
            .then(response => response.text())
            .then(html => {
                // Extract the content of the 'tab-address' div from the fetched HTML
                const tabAddressContent = new DOMParser().parseFromString(html, 'text/html')
                    .getElementById('tab-orders').innerHTML;

                // Update the content of the 'tab-address' div
                document.getElementById('tab-orders').innerHTML = tabAddressContent;
            })
            .catch(error => {
                console.error('Error reloading address tab:', error);
            });
    }
</script>

<script>

</script>




<script>
    function validateForm() {
        // Get references to form elements
        const location = document.getElementById('form28');
        const address = document.getElementById('form29');
        const city = document.getElementById('form30');
        const zip = document.getElementById('form31'); // Note: You have duplicate IDs, which is not valid. Consider using unique IDs.
        const phone = document.getElementById('form32');
        const email = document.getElementById('form33');
        const state = document.getElementById('form34');

        // Reset previous error messages
        resetErrorMessages();

        // Validate each field
        if (location.value.length < 5) {
            displayErrorMessage(location, "Location must have at least 5 characters.");
            return false;
        }

        if (address.value.length < 5) {
            displayErrorMessage(address, "Address must have at least 5 characters.");
            return false;
        }

        if (city.value.length < 5) {
            displayErrorMessage(city, "City must have at least 5 characters.");
            return false;
        }

        if (zip.value.length < 5) {
            displayErrorMessage(zip, "Zip code must have at least 5 characters.");
            return false;
        }

        if (phone.value.length < 5) {
            displayErrorMessage(phone, "Phone number must have at least 5 characters.");
            return false;
        }

        if (email.value.length < 5 || !isValidEmail(email.value)) {
            displayErrorMessage(email, "Email must have at least 5 characters and be valid.");
            return false;
        }

        if (state.value.length < 5) {
            displayErrorMessage(state, "State must have at least 5 characters.");
            return false;
        }

        // All validations passed
        return true;
    }

    function isValidEmail(email) {
        // Simple email validation using a regular expression
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function displayErrorMessage(element, message) {
        // Create and append an error message next to the element
        const errorMessage = document.createElement("div");
        errorMessage.className = "text-danger";
        errorMessage.innerHTML = message;
        element.parentNode.appendChild(errorMessage);
    }

    function resetErrorMessages() {
        // Remove all previous error messages
        const errorMessages = document.querySelectorAll(".text-danger");
        errorMessages.forEach(function (errorMessage) {
            errorMessage.parentNode.removeChild(errorMessage);
        });
    }
</script>


<script>
    function saveEdit(userId) {
        // Get the values from the modal form
		const address = document.getElementById(`editaddress${userId}`).value;
		const city = document.getElementById(`editcity${userId}`).value;
		const state = document.getElementById(`editstate${userId}`).value;
		const phone = document.getElementById(`editphone${userId}`).value;
		const location = document.getElementById(`editLocation${userId}`).value;  // Corrected ID
		const zip = document.getElementById(`editzip${userId}`).value;
		const email = document.getElementById(`editemail${userId}`).value;

        // Add more fields as needed

        // Prepare the data to be sent in the request body
        const formData = {
			location:location,
            address: address,
            city: city,
			zip:zip,
			phone:phone,
			email:email,
			state:state

        }

        // Send a PUT or PATCH request to update the address
        fetch(`/updateaddress/${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                
            },
            body: JSON.stringify(formData),
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
           
            console.log('Address updated successfully');
            reloadAddressTab();
        })
        .catch(error => {
    
            console.error('Error updating address:', error);
        });

       
        $(`#editModal${userId}`).modal('hide');
    }



</script>


 <%-include('../partials/user/footer.ejs')%>