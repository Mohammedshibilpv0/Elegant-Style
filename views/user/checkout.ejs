<%-include('../partials/user/header.ejs')%>
<%-include('../partials/user/navbar.ejs')%>
<%-include('../partials/user/mobilenav.ejs')%>
        <main class="main">
        	<div class="page-header text-center" style="background-image: url('/user/assets/images/page-header-bg.jpg')">
        		<div class="container">
        			<h1 class="page-title">Checkout<span>Shop</span></h1>
        		</div><!-- End .container -->
        	</div><!-- End .page-header -->

            <div class="page-content mt-5">
            	<div class="checkout">
	                <div class="container">
            			

		                	<div class="row">
		                		<div class="col-lg-9">
									<form action="/addadress" method="POST" onsubmit="return validateForm()">
										<select id="addressSelect" class="selectpicker" style="max-width: 200px; min-width: 200px;"   onchange="updateSelectedAddress()">
											<% if (user && user.Addresses && user.Addresses.length > 0) { %>
												<% user.Addresses.forEach(Address => { %>

												<option >

												  <%= `Location: ${Address.location}, Address: ${Address.address},
												  City: ${Address.city}, Zip: ${Address.zip},Phone: ${Address.phone}, 
												 Email:  ${Address.email}, State: ${Address.state}` %>
												</option>
											  <% }); %>
											<% } else { %>
											  
											<% } %>
										  </select> <br>
										   <p id="addr" class="text-danger"></p>
									<div class="modal fade" id="modalContactForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
									aria-hidden="true">
									<div class="modal-dialog" role="document">
									  <div class="modal-content">
										<div class="modal-header text-center">
										  <h4 class="modal-title w-100 font-weight-bold">Enter the details</h4>
										  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
											<span aria-hidden="true">&times;</span>
										  </button>
										</div>
										<div class="modal-body mx-3">
										  <div class="md-form mb-5">
											<i class="fas fa-user prefix grey-text"></i>
											<input type="text" id="form28" class="form-control validate" name="location">
											<label data-error="wrong" data-success="right" for="form34">Location</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-envelope prefix grey-text"></i>
											<input type="text" id="form29" class="form-control validate" name="Address">
											<label data-error="wrong" data-success="right" for="form29">Address</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form30" class="form-control validate" name="city">
											<label data-error="wrong" data-success="right" for="form32">City</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form31" class="form-control validate" name="zip">
											<label data-error="wrong" data-success="right" for="form32">Zip</label>
										  </div>
										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form32" class="form-control validate" name="phone">
											<label data-error="wrong" data-success="right" for="form32">Phone</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="email" id="form33" class="form-control validate" name="email">
											<label data-error="wrong" data-success="right" for="form32">Email</label>
										  </div>

										  <div class="md-form mb-5">
											<i class="fas fa-tag prefix grey-text"></i>
											<input type="text" id="form34" class="form-control validate" name="state">
											<label data-error="wrong" data-success="right" for="form32">State</label>
										  </div>

										</div>
										<div class="modal-footer d-flex justify-content-center">
										  <button type="submit" class="btn btn-primary">Send <i class="fas fa-paper-plane-o ml-1"></i></button>
										</div>
									  </div>
									</div>
								  </div>
								  <div id="selectedAddress" style="max-width: 400px;"></div>
								</form>
								<!-- Your select element -->

								  <div id="selectedAddress"></div>

								  <div>
									<a href="" class="btn btn-primary btn-rounded mb-4 mt-3" data-toggle="modal" data-target="#modalContactForm">Add Address
								</a>
								  </div>

								  <div class="checkout-discount" >
									<form id="couponForm">
										<input type="text" class="form-control"  required id="checkout-discount-input">
										<label for="checkout-discount-input" class="text-truncate">Have a coupon? <span>Click here to enter your code</span></label>
										<button class="btn btn-primary mt-4" type="submit">Submit</button>
									</form>
									<p id="already" class="text-danger"></p>
								</div><!-- End .checkout-discount -->

		                		</div><!-- End .col-lg-9 -->
		                		<aside class="col-lg-3">
		                			<div class="summary">
		                				<h3 class="summary-title">Your Order</h3><!-- End .summary-title -->

		                				<table class="table table-summary">
		                					<thead>
		                						<tr>
		                							<th>Product</th>
		                							<th>Total</th>
		                						</tr>
		                					</thead>

		                					<tbody>
													<% cartData.products.forEach(product => { %>
		                						<tr>
		                							<td><a href="#"><%= product.productId.Name %></a></td>
		                							<td><%= product.totalPrice %> </td>
		                						</tr>
												<% }); %>
		                						<tr class="summary-subtotal">
		                							<td>Subtotal:</td>
		                							<td>₹<%= totalPriceTotal %></td>
		                						</tr><!-- End .summary-subtotal -->
		                						<tr>
		                							<td>Shipping:</td>
		                							<td>Free shipping</td>

		                						</tr>
												<tr id="display1" >
													<td  id="Namec"></td>
													<td id="success" class="text-success"></td>
													
												</tr>
												<tr id="display2">
													<td id="msg"></td>
													<input type="text" id="couponcode" hidden>
													<td id="org"></td>
												</tr>
												
		                						<tr class="summary-total">
		                							<td id="offer">Total:</td>
		                							<td >₹<span id="discount"><%= totalPriceTotal %></span></td>
		                						</tr><!-- End .summary-total -->
											
		                					</tbody>
		                				</table><!-- End .table table-summary -->
										
										<select name="paymentMethod" id="payment">
											<option value="Cash on delivery" >Cash on delivery</option>
											<option value="Razorpay">Razorpay</option>
											<%if(user.wallet >totalPriceTotal){%>
												<option value="wallet">Wallet</option>
												<%}else{%>
											<option disabled >Wallet</option>
											<%}%>
										</select>
								

		                				<button  class="btn btn-outline-primary-2 btn-order btn-block" onclick="sendSelection()">
		                					<span class="btn-text">Place Order</span>
		                					<span class="btn-hover-text">Proceed to Checkout</span>
		                				</button>
		                			</div><!-- End .summary -->
		                		</aside><!-- End .col-lg-3 -->
		                	</div><!-- End .row -->
						
            			
	                </div><!-- End .container -->
                </div><!-- End .checkout -->
            </div><!-- End .page-content -->
        </main><!-- End .main -->



<%-include('../partials/user/footer.ejs')%>




</div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<script>  //preview of the address in checkout page
	function updateSelectedAddress() {
	  // Get the selected option
	  const selectedOption = document.getElementById('addressSelect').value;
  
	  // Update the div with the selected address
	  document.getElementById('selectedAddress').textContent = `Selected Address: ${selectedOption}`;
	}
  
	// Function to set the default address when the page is loaded
	function setDefaultAddress() {
	  const defaultOption = document.querySelector('#addressSelect option:not([disabled])');
	  if (defaultOption) {
		const defaultAddress = defaultOption.textContent;
		document.getElementById('selectedAddress').textContent = `Selected Address: ${defaultAddress}`;
	  }
	}
  
	// Call setDefaultAddress when the page is loaded
	window.onload = setDefaultAddress;
  </script>

<script>
	
    function sendSelection() {

        // Get the selected value
        const selectedValue = document.getElementById("addressSelect").value;
		const  paymentMethod= document.getElementById('payment').value
		const  total=document.getElementById('discount').textContent
		const  couponid  =  document.getElementById('couponcode').value
		if(!selectedValue){
			const message=document.getElementById('addr').innerHTML="Please Select the Address"
			return
		}
        // Example fetch API request
        fetch('/placeorder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                paymentMethod: paymentMethod,
                selectedValue: selectedValue,
				total:total,
				couponid:couponid
            }),
        })
        .then(response => response.json())
        .then(data => {
            console.log('Backend response:', data);

            // Check if the order processing was successful
            if (data.success) {

                Swal.fire({
                    title: 'Order Placed Successfully!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000 // Set the duration for the alert

                });

					setTimeout(()=>{

						window.location.href = `/vieworder/${data.orderId}`;
						},2000)
			}else if(data.Razorpay){

				const options = {
    "key": "rzp_test_QmkTPpR7YwgsmH", // Enter the Key ID generated from the Dashboard
    "amount": data.Razorpay.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    "currency": "INR",
    "name": "Elegant style",
    "description": "Test Transaction",
    "image": "https://example.com/your_logo",
    "order_id": data.Razorpay.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
	"handler": function (response){
        // alert(response.razorpay_payment_id);
        // alert(response.razorpay_order_id);
        // alert(response.razorpay_signature)
		 verifyPayment(response,data.Razorpay)
    },
    "prefill": {
        "name": "Gaurav Kumar",
        "email": "gaurav.kumar@example.com",
        "contact": "9000090000"
    },
    "notes": {
        "address": "Razorpay Corporate Office"
    },
    "theme": {
        "color": "#3399cc"
    }
};

var rzp1 = new Razorpay(options);
rzp1.open();
			var rzp1 = new Razorpay(options);
			rzp1.open()
            } else {
                // Display SweetAlert error notification
                Swal.fire({
                    title: 'Order Processing Failed',
                    text: 'An error occurred while processing the order.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
				
            }
        })
        .catch(error => {
            console.error('Error:', error);
            // Handle errors if any
        });
    }

	function verifyPayment(payment,order){
		console.log(payment);
      $.ajax({
		url:'/verifypayment',
		data:{
			payment,
			order
		},
		method:"POST",
		success:(response)=>{
			if(response.payment){

                Swal.fire({
                    title: 'Order Placed Successfully!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 2000 // Set the duration for the alert

                });
				const orderid=order.receipt
				setTimeout(()=>{

						window.location.href = `/vieworder/${orderid}`;
				},2000)
			}
		}
	  })
	}
</script>


<script>
	document.addEventListener("DOMContentLoaded", function () {
	  var form = document.querySelector("form");
  
	  form.addEventListener("submit", function (event) {
		var selectedAddressDiv = document.getElementById("selectedAddress");
  
		// Check if the #selectedAddress div has content
		if (!selectedAddressDiv.innerHTML.trim()) {
		  // If no content, prevent the form from being submitted
		  event.preventDefault();
		  alert("Please select an address before submitting the form.");
		}
	  });
	});
  </script>

<script>
	// address validation
    function validateForm() {
        // Get references to form elements
        const location = document.getElementById('form28');
        const address = document.getElementById('form29');
        const city = document.getElementById('form30');
        const zip = document.getElementById('form31'); // Note: You have duplicate IDs, which is not valid. Consider using unique IDs.
        const phone = document.getElementById('form32');
        const email = document.getElementById('form33');
        const state = document.getElementById('form34');

        // Reset previous error messages
        resetErrorMessages();

        // Validate each field
        if (location.value.length < 5) {
            displayErrorMessage(location, "Location must have at least 5 characters.");
            return false;
        }

        if (address.value.length < 5) {
            displayErrorMessage(address, "Address must have at least 5 characters.");
            return false;
        }

        if (city.value.length < 5) {
            displayErrorMessage(city, "City must have at least 5 characters.");
            return false;
        }

        if (zip.value.length < 5) {
            displayErrorMessage(zip, "Zip code must have at least 5 characters.");
            return false;
        }

        if (phone.value.length < 5) {
            displayErrorMessage(phone, "Phone number must have at least 5 characters.");
            return false;
        }

        if (email.value.length < 5 || !isValidEmail(email.value)) {
            displayErrorMessage(email, "Email must have at least 5 characters and be valid.");
            return false;
        }

        if (state.value.length < 5) {
            displayErrorMessage(state, "State must have at least 5 characters.");
            return false;
        }

        // All validations passed
        return true;
    }

    function isValidEmail(email) {
        // Simple email validation using a regular expression
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function displayErrorMessage(element, message) {
        // Create and append an error message next to the element
        const errorMessage = document.createElement("div");
        errorMessage.className = "text-danger";
        errorMessage.innerHTML = message;
        element.parentNode.appendChild(errorMessage);
    }

    function resetErrorMessages() {
        // Remove all previous error messages
        const errorMessages = document.querySelectorAll(".text-danger");
        errorMessages.forEach(function (errorMessage) {
            errorMessage.parentNode.removeChild(errorMessage);
        });
    }


	document.getElementById('display1').style.display = 'none';
document.getElementById('display2').style.display = 'none';

	document.getElementById('couponForm').addEventListener('submit', async function (event) {
  event.preventDefault();

  const couponCode = document.getElementById('checkout-discount-input').value;
  const checkprice=document.getElementById('discount').textContent

  try {
    const response = await fetch('/applyCoupon', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ couponCode,checkprice }),
    });

    if (!response.ok) {
      throw new Error(`HTTP error! Status: ${response.status}`);
    }

    const data = await response.json();

    // Handle the 'data' here, for example:
    if (data.success) {
		document.getElementById('display1').style.display = 'table-row';
      document.getElementById('display2').style.display = 'table-row';
	  document.getElementById('couponcode').value=data.couponid
      document.getElementById('success').innerHTML=data.success
	  document.getElementById('Namec').innerHTML="Coupon Name :"
	  document.getElementById('msg').innerHTML=" Old Price:"
	  document.getElementById('org').innerHTML= `₹ ${data.totalPriceTotal}`
	  document.getElementById('org').style.textDecoration = 'line-through';
	  document.getElementById('offer').innerHTML="Offer Price"
	  document.getElementById('discount').innerHTML=data.discount
    } else if (data.already) {
	document.getElementById('already').innerHTML=data.already
      console.log(data.already); // Coupon already used by this user
      
    } else if(data.minimum) {
      
		document.getElementById('already').innerHTML=data.minimum
    }else{
		console.log(data.error);
		document.getElementById('already').innerHTML=data.error
	}

  } catch (error) {
    console.error('Error:', error);
    // Handle fetch errors
  }
});


</script>
